/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.form.adminkamar;

import Controller.CheckInManager;
import Controller.CheckOutManager;
import Controller.PasienManager;
import Controller.PembayaranManager;
import Controller.RuanganManager;
import Model.InfoCheckIn;
import Model.InfoCheckOut;
import Model.KasirDB;
import Model.Pasien;
import Model.Pembayaran;
import Model.Ruangan;
import Model.User;
import Tools.Widget;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author root
 */
public class checkinForm extends javax.swing.JInternalFrame {

    KasirDB kdb;
    CheckInManager cim;
    CheckOutManager com;
    PasienManager pm;
    RuanganManager rm;
    PembayaranManager bm;
    DefaultTableModel model_pilihan;
    DefaultTableModel model_ruang;
    DefaultTableModel model;
    Pasien pasien;
    Ruangan ruang;
    InfoCheckIn checkin;
    User user;
    
    final TableRowSorter<TableModel> sorter;
  
    int selectedRow;

    int popup;
    
    public checkinForm(KasirDB kasirdb, User user) throws SQLException, ParseException {

        this.kdb = kasirdb;

        cim = new CheckInManager(kdb);
        
        com = new CheckOutManager(kdb);

        pm = new PasienManager(kdb);

        rm = new RuanganManager(kdb);

        bm = new PembayaranManager(kdb);

        model = this.setToTable();

        checkin = new InfoCheckIn();
        
        model_pilihan = pm.setToTable();
        model_ruang = rm.setToTable();
        sorter = new TableRowSorter<>();

        this.user = user;


        initComponents();
        Dates();
        Hours();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        search_pasien = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        btn_simpan = new javax.swing.JButton();
        txt_id_pasien = new javax.swing.JTextField();
        txt_nama = new javax.swing.JTextField();
        txt_nama_ruangan = new javax.swing.JTextField();
        btn_cari_id = new javax.swing.JButton();
        c_date = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_id_checkin = new javax.swing.JTextField();
        btn_batal = new javax.swing.JButton();
        notifikasi = new javax.swing.JLabel();
        txt_hour = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        txt_id_ruangan = new javax.swing.JTextField();
        btn_cari_id_ruang = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_edit = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        notifikasi_hapus = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        search_pasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_pasienActionPerformed(evt);
            }
        });
        search_pasien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                search_pasienKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(search_pasien)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(search_pasien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
        );

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setTitle("Data Check In");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/hospital.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("ID Pasien");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, -1, -1));

        jLabel2.setText("Nama Pasien");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel3.setText("Tanggal Masuk");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 490, -1));

        jLabel4.setText("Nama Ruangan");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });
        jPanel1.add(btn_simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 90, 25));

        txt_id_pasien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_id_pasienKeyPressed(evt);
            }
        });
        jPanel1.add(txt_id_pasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 35, 190, -1));

        txt_nama.setEditable(false);
        jPanel1.add(txt_nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 265, -1));

        txt_nama_ruangan.setEditable(false);
        txt_nama_ruangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nama_ruanganActionPerformed(evt);
            }
        });
        jPanel1.add(txt_nama_ruangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 190, -1));

        btn_cari_id.setText("Cari");
        btn_cari_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cari_idActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cari_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 35, -1, 20));
        jPanel1.add(c_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 85, 190, -1));

        jLabel6.setText("ID Ruangan");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel7.setText("Kode Kunjungan");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        txt_id_checkin.setEditable(false);
        jPanel1.add(txt_id_checkin, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 190, -1));

        btn_batal.setText("Batal");
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });
        jPanel1.add(btn_batal, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 90, -1));

        notifikasi.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(notifikasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 280, 20));

        txt_hour.setEditable(false);
        jPanel1.add(txt_hour, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 70, -1));

        jTextField1.setEditable(false);
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 190, -1));

        txt_id_ruangan.setEditable(false);
        txt_id_ruangan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_id_ruanganKeyPressed(evt);
            }
        });
        jPanel1.add(txt_id_ruangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 190, -1));

        btn_cari_id_ruang.setText("Cari");
        btn_cari_id_ruang.setEnabled(false);
        btn_cari_id_ruang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cari_id_ruangActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cari_id_ruang, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, -1, 20));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(model);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 19, 390, 280));

        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        jPanel2.add(btn_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 310, 90, -1));

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });
        jPanel2.add(btn_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 310, 90, -1));

        notifikasi_hapus.setForeground(new java.awt.Color(255, 0, 0));
        jPanel2.add(notifikasi_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 190, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cari_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cari_idActionPerformed
        findPasienByID();
    }//GEN-LAST:event_btn_cari_idActionPerformed

    private void txt_nama_ruanganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nama_ruanganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nama_ruanganActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        try {

            checkin.setId_Pasien(Integer.parseInt(txt_id_pasien.getText()));
            checkin.setId_ruangan(Integer.parseInt(txt_id_ruangan.getText()));
            checkin.setTgl_masuk(Widget.convertJavaDateToSqlDate(c_date.getDate()));

            if (!txt_id_checkin.getText().equals("")) {
                checkin.setId_checkIn(Integer.parseInt(txt_id_checkin.getText()));
                cim.updateDataCheckIn(checkin);
                InfoCheckIn checkin_update = cim.getDataById(checkin.getId_checkIn()).get(0);

                model.setValueAt(checkin_update.getId_checkIn(), selectedRow, 0);
                model.setValueAt(checkin_update.getNama(), selectedRow, 1);
                model.setValueAt(checkin_update.getRuang(), selectedRow, 2);
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                model.setValueAt(formatter.format(checkin_update.getTgl_masuk()), selectedRow, 3);
            } else {
                InfoCheckIn checkin_baru = cim.addCheckIn(checkin);

                Pembayaran pembayaran = new Pembayaran();
                pembayaran.setId_Checkin(checkin_baru.getId_checkIn());
                pembayaran.setStatus(0);
                pembayaran.setTanggal(Widget.convertJavaDateToSqlDate(c_date.getDate()));
                pembayaran.setId_user(this.user.getId_user());

                bm.addPembayaran(pembayaran);
                model.addRow(new Object[]{checkin_baru.getId_checkIn(), txt_nama.getText(), txt_nama_ruangan.getText(), checkin_baru.getTgl_masuk()});
                notifikasi.setText("Data Disimpan");
                clearForm();
            }
        } catch (SQLException ex) {
            Logger.getLogger(checkinForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed

        try {
            int row = jTable1.getSelectedRow();
            int column = 0;

            Object object = model.getValueAt(row, column);

            InfoCheckIn checkin_edit = cim.getDataById(Integer.parseInt(object.toString())).get(0);
            txt_id_checkin.setText("" + checkin_edit.getId_checkIn());
            txt_id_pasien.setText("" + checkin_edit.getId_Pasien());
            txt_nama.setText(checkin_edit.getNama());
            c_date.setDate(checkin_edit.getTgl_masuk());
            txt_id_ruangan.setText("" + checkin_edit.getId_ruangan());
            txt_nama_ruangan.setText(checkin_edit.getRuang());

        } catch (SQLException ex) {
            Logger.getLogger(checkinForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        try {
            int row = jTable1.getSelectedRow();
            int column = 0;

            Object object = model.getValueAt(row, column);

            InfoCheckIn checkin_edit = cim.getDataById(Integer.parseInt(object.toString())).get(0);
            txt_id_pasien.setText("" + checkin_edit.getId_Pasien());
            txt_nama.setText(checkin_edit.getNama());
            c_date.setDate(checkin_edit.getTgl_masuk());
            txt_id_ruangan.setText("" + checkin_edit.getId_ruangan());
            txt_nama_ruangan.setText(checkin_edit.getRuang());

            cim.delDataCheckIn(checkin_edit);

            model.removeRow(row);
            notifikasi_hapus.setText("Data Dihapus");
            clearForm();
        } catch (SQLException ex) {
            Logger.getLogger(ruanganForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
        clearForm();
    }//GEN-LAST:event_btn_batalActionPerformed

    private void btn_cari_id_ruangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cari_id_ruangActionPerformed
        findByIdRuang();
    }//GEN-LAST:event_btn_cari_id_ruangActionPerformed

    private void txt_id_pasienKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_id_pasienKeyPressed
        popup = 1;
        
        switch (evt.getKeyCode()){
            case 112:
                
                jTable2.setModel(model_pilihan);
                sorter.setModel(model_pilihan);
                jTable2.setRowSorter(sorter);

                JOptionPane.showConfirmDialog(null, jPanel3, "Daftar Pasien", JOptionPane.CLOSED_OPTION, JOptionPane.PLAIN_MESSAGE);                
            break;
            
            case 10:
                findPasienByID();
            break;
        }
    }//GEN-LAST:event_txt_id_pasienKeyPressed

    private void search_pasienKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_pasienKeyTyped
        if (search_pasien.getText().length() == 0) {
            
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter(search_pasien.getText()));
        }
    }//GEN-LAST:event_search_pasienKeyTyped

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed

        if (evt.getKeyCode() == 10) {
       
            int row =jTable2.getSelectedRow();
            
            System.out.println(row);
            
            Object object = jTable2.getValueAt(row, 0);
            if(popup==1)
            txt_id_pasien.setText(object.toString());
            else if(popup==2)
            txt_id_ruangan.setText(object.toString());
    
            JOptionPane.getRootFrame().dispose();
       }
    }//GEN-LAST:event_jTable2KeyPressed

    private void search_pasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_pasienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_pasienActionPerformed

    private void txt_id_ruanganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_id_ruanganKeyPressed
        
        popup = 2;
        
        switch (evt.getKeyCode()){
            case 112:
                
                jTable2.setModel(model_ruang);
                sorter.setModel(model_ruang);
                jTable2.setRowSorter(sorter);

                JOptionPane.showConfirmDialog(null, jPanel3, "Daftar Ruang", JOptionPane.CLOSED_OPTION, JOptionPane.PLAIN_MESSAGE);                
            break;
            
            case 10:
                findByIdRuang();
            break;
        }
    }//GEN-LAST:event_txt_id_ruanganKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_batal;
    private javax.swing.JButton btn_cari_id;
    private javax.swing.JButton btn_cari_id_ruang;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_simpan;
    private com.toedter.calendar.JDateChooser c_date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel notifikasi;
    private javax.swing.JLabel notifikasi_hapus;
    private javax.swing.JTextField search_pasien;
    private javax.swing.JTextField txt_hour;
    private javax.swing.JTextField txt_id_checkin;
    private javax.swing.JTextField txt_id_pasien;
    private javax.swing.JTextField txt_id_ruangan;
    private javax.swing.JTextField txt_nama;
    private javax.swing.JTextField txt_nama_ruangan;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel setToTable(){
        Object[][] rowData = new Object[0][4];
        Object column[] = {"ID ", "Nama", "Ruang", "Tgl Masuk", "Tgl Keluar"};
        
        DefaultTableModel jtable = new DefaultTableModel(rowData, column);

        return jtable;
    }
       
    private void setTableData(ArrayList<InfoCheckIn> checkin) throws SQLException, ParseException {


        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        model.setRowCount(0);

        for (int i = 0; i < checkin.size(); i++) {
            ArrayList<InfoCheckOut> cekOut;
            String tgl_keluar ="-";
            cekOut = com.getDataByIdCheckIn(checkin.get(i).getId_checkIn());
            if(cekOut != null)tgl_keluar =formatter.format(cekOut.get(0).getTgl_keluar());
            
            model.addRow(new Object[]{
                checkin.get(i).getId_checkIn(),checkin.get(i).getNama(),
                checkin.get(i).getRuang(), formatter.format(checkin.get(i).getTgl_masuk()),
                tgl_keluar
            });
        }
    }
    
    public void clearForm() {
        txt_id_checkin.setText("");
        txt_id_pasien.setText("");
        txt_nama.setText("");
        txt_id_ruangan.setText("");
        txt_nama_ruangan.setText("");
        txt_id_ruangan.setEditable(false);
        btn_cari_id_ruang.setEnabled(false);
    }

    public void enableTextfield() {
        if (txt_nama.getText().length() != 0) {
            txt_id_ruangan.setEditable(true);
            btn_cari_id_ruang.setEnabled(true);
        }
    }

    public void Dates() {
        Calendar calender = Calendar.getInstance();
        SimpleDateFormat date = new SimpleDateFormat("MMM d, yyyy");
        String tanggal = date.format(calender.getTime());
        jTextField1.setText(tanggal);
    }

    public void Hours() {
        Calendar calender = Calendar.getInstance();
        int hours = calender.get(Calendar.HOUR_OF_DAY);
        int minute = calender.get(Calendar.MINUTE);
        txt_hour.setText(hours + ":" + minute);
    }
    
    private void findPasienByID(){
        String id_pasien = txt_id_pasien.getText();
        if (id_pasien.equals("")) {
            jTextField1.setText("ID Pasien Tidak Boleh Kosong");
        } else {
            try {
                if (pm.getDataById(Integer.parseInt(txt_id_pasien.getText())).size() == 1) {
                    pasien = pm.getDataById(Integer.parseInt(txt_id_pasien.getText())).get(0);
                    txt_nama.setText(pasien.getName());
                    enableTextfield();
                    ArrayList<InfoCheckIn> checkin_show = cim.getAllDataByIdPasienWithoutStatus(Integer.parseInt(txt_id_pasien.getText()));
                    
                    this.setTableData(checkin_show);
                } else if (pm.getDataById(Integer.parseInt(txt_id_pasien.getText())).size() != 1) {
                    notifikasi.setText("Data Tidak Ditemukan");
                }
            } catch (SQLException | ParseException ex) {
                Logger.getLogger(checkinForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void findByIdRuang() {
        String id_ruang = txt_id_ruangan.getText();
        if (id_ruang.equals("")) {
            notifikasi.setText("ID Ruangan Tidak Boleh Kosong");
        } else {
            try {
                if (rm.getDataById(Integer.parseInt(txt_id_ruangan.getText())).size() == 1) {
                    ruang = rm.getDataById(Integer.parseInt(txt_id_ruangan.getText())).get(0);
                    txt_nama_ruangan.setText(ruang.getNama_ruang());
                } else if (rm.getDataById(Integer.parseInt(txt_id_ruangan.getText())).size() != 1) {
                    notifikasi.setText("Data Tidak Ditemukan");
                }
            } catch (SQLException ex) {
                Logger.getLogger(checkinForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}

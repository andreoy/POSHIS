/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.form.adminkamar;

import Controller.CheckInManager;
import Controller.CheckOutManager;
import Controller.PasienManager;
import Model.InfoCheckIn;
import Model.InfoCheckOut;
import Model.KasirDB;
import Model.User;
import Tools.Widget;
import app.form.kasir.belanjaForm;
import app.form.superuser.penggunaForm;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author root
 */
public class checkoutForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form checkinForm
     */
    KasirDB db;

    CheckInManager cim;

    CheckOutManager com;

    InfoCheckIn cekin;

    DefaultTableModel model;

    DefaultTableModel model_pilihan;
    
    final TableRowSorter<TableModel> sorter;
    
    int selectedRow;
    
    PasienManager pm;

    public checkoutForm(KasirDB kasirdb) throws SQLException, ParseException {
        this.db = kasirdb;

        cim = new CheckInManager(db);
        com = new CheckOutManager(db);
        pm = new PasienManager(db);
        model = this.setToTable();
        
        model_pilihan = pm.setToTable();
        sorter = new TableRowSorter<>();

        initComponents();
        Dates();
        Hours();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        txt_search = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btn_simpan = new javax.swing.JButton();
        txt_id_pasien = new javax.swing.JTextField();
        txt_nama_pasien = new javax.swing.JTextField();
        txt_ruangan = new javax.swing.JTextField();
        txt_tanggal_masuk = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        c_date = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        txt_id_checkout = new javax.swing.JTextField();
        btn_batal = new javax.swing.JButton();
        notifikasi = new javax.swing.JLabel();
        txt_tanggal = new javax.swing.JTextField();
        txt_hour = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txt_cari = new javax.swing.JTextField();
        btn_cari = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        notifikasi_hapus = new javax.swing.JLabel();

        jTable2.setModel(model_pilihan);
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_searchKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(txt_search)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(txt_search, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setTitle("Data Check Out");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/hospital.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("ID Pasien");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel2.setText("Nama Pasien");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel3.setText("Nama Ruangan");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jLabel4.setText("Tanggal Masuk");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });
        jPanel1.add(btn_simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 90, 25));

        txt_id_pasien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_id_pasienKeyPressed(evt);
            }
        });
        jPanel1.add(txt_id_pasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 190, -1));

        txt_nama_pasien.setEditable(false);
        jPanel1.add(txt_nama_pasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 300, -1));

        txt_ruangan.setEditable(false);
        jPanel1.add(txt_ruangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 190, -1));

        txt_tanggal_masuk.setEditable(false);
        jPanel1.add(txt_tanggal_masuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 300, -1));

        jButton1.setText("Cari");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, -1, 20));

        jLabel6.setText("Tanggal Keluar");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));
        jPanel1.add(c_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 190, -1));

        jLabel7.setText("Kode CheckOut");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        txt_id_checkout.setEditable(false);
        jPanel1.add(txt_id_checkout, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 190, -1));

        btn_batal.setText("Batal");
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });
        jPanel1.add(btn_batal, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 90, -1));

        notifikasi.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(notifikasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 280, 20));

        txt_tanggal.setEditable(false);
        jPanel1.add(txt_tanggal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 190, -1));

        txt_hour.setEditable(false);
        jPanel1.add(txt_hour, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, 70, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(model);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 49, 380, 250));

        jLabel5.setText("Kata Kunci");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 18, 90, 25));
        jPanel2.add(txt_cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 18, 160, 25));

        btn_cari.setText("Cari");
        jPanel2.add(btn_cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 18, -1, -1));

        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        jPanel2.add(btn_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 90, -1));

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });
        jPanel2.add(btn_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 90, -1));

        notifikasi_hapus.setForeground(new java.awt.Color(255, 0, 0));
        jPanel2.add(notifikasi_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 190, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        findPasienByID();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        String nama_pasien = txt_nama_pasien.getText();
        if (nama_pasien.equals("")) {
            notifikasi.setText("Data Pasien Kosong");
        } else {
            InfoCheckOut cekout = new InfoCheckOut();

            cekout.setId_checkIn(cekin.getId_checkIn());
            cekout.setTgl_keluar(Widget.convertJavaDateToSqlDate(c_date.getDate()));
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            try {

                if (!txt_id_checkout.getText().equals("")) {
                    cekout.setId_checkOut(Integer.parseInt(txt_id_checkout.getText()));

                    com.updateDataCheckOut(cekout);
                    model.setValueAt(cekout.getId_checkOut(), selectedRow, 0);
                    model.setValueAt(txt_nama_pasien.getText(), selectedRow, 1);
                    model.setValueAt(txt_ruangan.getText(), selectedRow, 2);
                    model.setValueAt(formatter.format(cekin.getTgl_masuk()),selectedRow,3);
                    model.setValueAt(formatter.format(cekout.getTgl_keluar()), selectedRow, 4);
                } else {
                    InfoCheckOut cek_out_baru = com.addCheckOut(cekout);
                    model.addRow(new Object[]{ cek_out_baru.getId_checkOut(), txt_nama_pasien.getText(),txt_ruangan.getText(),formatter.format(cekin.getTgl_masuk()),cek_out_baru.getTgl_keluar()});
                    notifikasi.setText("Data Disimpan");
                    clearForm();
                }
            } catch (SQLException ex) {
                Logger.getLogger(checkoutForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        try {
            selectedRow = jTable1.getSelectedRow();
            int column = 0;

            Object object = model.getValueAt(selectedRow, column);

            InfoCheckOut cek_out_edit = com.getDataById(Integer.parseInt(object.toString())).get(0);
       
            InfoCheckIn cek_in_edit = cim.getDataById(cek_out_edit.getId_checkIn()).get(0);

            cekin = cek_in_edit;
            txt_id_checkout.setText(cek_out_edit.getId_checkOut() + "");
            txt_nama_pasien.setText(cek_in_edit.getNama());
            txt_ruangan.setText(cek_in_edit.getRuang());
            txt_tanggal_masuk.setText(cek_in_edit.getTgl_masuk().toString());

            c_date.setDate(cek_out_edit.getTgl_keluar());
            
            

        } catch (SQLException ex) {
            Logger.getLogger(ruanganForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(checkoutForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        try {
            int row = jTable1.getSelectedRow();
            int column = 0;

            Object object = model.getValueAt(row, column);

//            InfoCheckOut check_out_edit = com.getDataById(Integer.parseInt(object.toString())).get(0);

            com.delDataCheckOut(Integer.parseInt(object.toString()));

            model.removeRow(row);
            notifikasi_hapus.setText("Data Dihapus");
            clearForm();
        } catch (SQLException ex) {
            Logger.getLogger(ruanganForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
        clearForm();
    }//GEN-LAST:event_btn_batalActionPerformed

    private void txt_id_pasienKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_id_pasienKeyPressed
        switch (evt.getKeyCode()){
            case 112:
                
                jTable2.setModel(model_pilihan);
                sorter.setModel(model_pilihan);
                jTable2.setRowSorter(sorter);

                JOptionPane.showConfirmDialog(null, jPanel3, "Daftar Pasien", JOptionPane.CLOSED_OPTION, JOptionPane.PLAIN_MESSAGE);                
            break;
            
            case 10:
                findPasienByID();
            break;
        }
    }//GEN-LAST:event_txt_id_pasienKeyPressed

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        if (evt.getKeyCode() == 10) {
       
            int row =jTable2.getSelectedRow();
            
            System.out.println(row);
            
            Object object = jTable2.getValueAt(row, 0);
            
            txt_id_pasien.setText(object.toString());
    
            JOptionPane.getRootFrame().dispose();
       }
    }//GEN-LAST:event_jTable2KeyPressed

    private void txt_searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_batal;
    private javax.swing.JButton btn_cari;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_simpan;
    private com.toedter.calendar.JDateChooser c_date;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel notifikasi;
    private javax.swing.JLabel notifikasi_hapus;
    private javax.swing.JTextField txt_cari;
    private javax.swing.JTextField txt_hour;
    private javax.swing.JTextField txt_id_checkout;
    private javax.swing.JTextField txt_id_pasien;
    private javax.swing.JTextField txt_nama_pasien;
    private javax.swing.JTextField txt_ruangan;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_tanggal;
    private javax.swing.JTextField txt_tanggal_masuk;
    // End of variables declaration//GEN-END:variables

    private void clearForm() {
        txt_id_checkout.setText("");
        txt_id_pasien.setText("");
        txt_nama_pasien.setText("");
        txt_ruangan.setText("");
        txt_tanggal_masuk.setText("");
    }

    public void Dates() {
        Calendar calender = Calendar.getInstance();
        SimpleDateFormat date = new SimpleDateFormat("MMM d, yyyy");
        String tanggal = date.format(calender.getTime());
        txt_tanggal.setText(tanggal);
    }

    public void Hours() {
        Calendar calender = Calendar.getInstance();
        int hours = calender.get(Calendar.HOUR_OF_DAY);
        int minute = calender.get(Calendar.MINUTE);
        txt_hour.setText(hours + ":" + minute);
    }

    private void findPasienByID() {
        String id_pasien = txt_id_pasien.getText();
        if (id_pasien.equals("")) {
            notifikasi.setText("ID Pasien Tidak Boleh Kosong");
        } else {
            try {
                               
                if (cim.getAllDataByIdPasienWithoutStatus(Integer.parseInt(txt_id_pasien.getText())).size() <= 0) {
                    notifikasi.setText("Data Tidak Ditemukan !!!");
                } 
                else if (cim.getAllDataByIdPasienWithoutStatus(Integer.parseInt(txt_id_pasien.getText())).size() >= 1){
                    ArrayList<InfoCheckIn> cekin_banyak;
                    cekin_banyak = cim.getDataByIdPasien(Integer.parseInt(txt_id_pasien.getText()));
                    
                    ArrayList<InfoCheckIn> cekin_belum_chek_out = new ArrayList();
                    
                    for(int i=0;i<cekin_banyak.size();i++){
                        if(com.getDataByIdCheckIn(cekin_banyak.get(i).getId_checkIn())== null){
                            cekin_belum_chek_out.add(cekin_banyak.get(i));
                        }
                    }
                    System.out.println("cekin:"+cekin_belum_chek_out.size());
                   
                   if(cekin_belum_chek_out.isEmpty()){
                       JOptionPane.showMessageDialog(null, "Tidak ada data CheckIn");
                   }
                   
                   else if(cekin_belum_chek_out.size() == 1){
                    System.out.println(cekin_belum_chek_out.get(0).getId_checkIn());
                    
                     cekin=cekin_belum_chek_out.get(0);
                    
                    txt_nama_pasien.setText(cekin_belum_chek_out.get(0).getNama());
                    txt_tanggal_masuk.setText(cekin_belum_chek_out.get(0).getTgl_masuk().toString());
                    txt_ruangan.setText(cekin_belum_chek_out.get(0).getRuang());
                    
                   
                    
                    
                   }else if(cekin_belum_chek_out.size() >= 2){
                       JOptionPane.showMessageDialog(null, "Lebih dari 1 belum check out");
                   }
                   ArrayList<InfoCheckIn> checkin_show = cim.getAllDataByIdPasienWithoutStatus(Integer.parseInt(txt_id_pasien.getText()));
                    
                    this.setTableData(checkin_show);
                    
                }
            } catch (SQLException | ParseException ex) {
                Logger.getLogger(belanjaForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private DefaultTableModel setToTable() {
        Object[][] rowData = new Object[0][4];
        Object column[] = {"ID ", "Nama", "Ruang", "Tgl Masuk", "Tgl Keluar"};
        
        DefaultTableModel jtable = new DefaultTableModel(rowData, column);

        return jtable;
    }
    
    private void setTableData(ArrayList<InfoCheckIn> checkin) throws SQLException, ParseException {


        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        model.setRowCount(0);

        for (int i = 0; i < checkin.size(); i++) {
            ArrayList<InfoCheckOut> cekOut;
            String tgl_keluar ="-";
            cekOut = com.getDataByIdCheckIn(checkin.get(i).getId_checkIn());

            if(cekOut != null){
                tgl_keluar =formatter.format(cekOut.get(0).getTgl_keluar());

                model.addRow(new Object[]{
                    cekOut.get(0).getId_checkOut(),checkin.get(i).getNama(),
                    checkin.get(i).getRuang(), formatter.format(checkin.get(i).getTgl_masuk()),
                    tgl_keluar
                });
            
             }
        }
    }
}